// Задача 2. Да се напише булева функция, която получава цяло неотрицателно число n и масив от n цели числа.
// Програмата да проверява дали въведените числа образуват редица „трион“.
// Редица „трион“ наричаме последователност, за която е вярно, че a1 ≤ a2 ≥ a3 ≤ a4 … или a1 ≥ a2 ≤ a3 ≥ a4 … 

// 10т.

#include <iostream>

int isTrion (unsigned int n, int *array){
    int counter = 0;

    for(unsigned int i = 0, j = 1; i < n; i += 2, j += 2){
        // Три забележки тук.
        // 1. Ако i = n - 1 => j = n | i + 1 = n и j + 1 = n + 1.
        // За цикъла това е валидно, тъй като i < n, но бързо се вижда, че се опитваме да бараме памет, която не трябва.
        // И реално j ни е излишно, тъй като j = i + 1 и j + 1 = i + 2.
        // 2. Правищ за двата варианта в един if, което означава, че можеш да имаш микс от двете редици, която да ти я дава за валидна.
        // Пример за това е следната редица: 1 3 5 4 5, което не е валидна редица, обаче по това условие става такава.
        // 3. Можеш след if-а да лепнеш един "else return false;", тъй като ако условието не е изпълнено знаем,
        // че редицата не е такава и можем веднага да го върнем.
        if((array[i] <= array[j] && array[i+1] >= array[j+1]) || (array[i] >= array[j] && array[i+1] <= array[j+1])){
            counter++;
        }
    }

    if(array[0] >= array[1]){
        counter += 1;
    }

    return counter == n / 2;
}

int main(){
    const size_t MAX = 1000;

    unsigned int n;
    std::cin >> n;
    // Хубаво е да се провери дали не е повече от MAX.

    int array[MAX];

    for(unsigned int i = 0; i < n; ++i){
        std::cin >> array[i];
    }    

    std::cout << isTrion(n, array);

    return 0;
}